plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '4.0.2'
}

group = 'com.hoo'

/*
 * NAME  - Description                          Example
 * MAJOR – breaking changes                     0.0.1 → 0.0.2
 * MINOR – backward-compatible new features     0.0.2 → 0.1.0
 * PATCH – backward-compatible bug fixes        0.1.0 → 1.0.0
 * */
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'

    runtimeOnly 'com.mysql:mysql-connector-j'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.register('unitTest', Test) {
    description = 'Run unit tests'
    group = 'verification'

    include '**/domain/**/*Test.class'

    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    useJUnitPlatform()
}

tasks.register('integrationTest', Test) {
    description = 'Run integration tests'
    group = 'verification'

    include '**/application/**/*Test.class'
    include '**/adapter/out/**/*Test.class'

    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    useJUnitPlatform()
}

tasks.register('APITest', Test) {
    description = 'Run API tests'
    group = 'verification'

    include '**/adapter/in/**/*Test.class'

    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    useJUnitPlatform()
}

asciidoctor {

    if (System.getProperty("deleteSnippets") || System.getenv("DELETE_SNIPPETS")) {
        delete file("./build/generated-snippets")
    }

    inputs.dir snippetsDir
    sourceDir = file("src/docs/asciidoc/")
    sources {
        include 'index.adoc'
    }
    resources {
        from(sourceDir) {
            include('images/**', 'fonts/**', 'styles/**', 'themes/**')
        }
    }
    configurations 'asciidoctorExt'

    attributes = ['doctype'           : 'book',
                  'description'       : '아카이브 오브 옹알 API 문서입니다.',
                  'icons'             : 'font',
                  'source-highlighter': 'highlightjs',
                  'highlightjs-theme' : true,
                  'toc'               : 'left',
                  'toclevels'         : '3',
                  'toc-title'         : '목차',
                  'imagesdir'         : './images',
                  'linkcss'           : true,
                  'stylesdir'         : './styles',
                  'stylesheet'        : 'stylesheet.css',
                  'favicon'           : './images/favicon.ico']

    dependsOn test
}

bootJar {
    dependsOn asciidoctor
}